                                                                                                         ASSUME CS:CODE ,DS:DATA,SS:STACK
DATA SEGMENT
	OP1 DW 0FFFH
	OP2 DW 0FFFH
	ADDP DW 01 DUP(?)
	SUBP DW 01 DUP(?)
	MULP DW 01 DUP(?)
	DIVP DW 01 DUP(?)
DATA ENDS

STACK SEGMENT
STACKDATA DB 100H DUP(?)
STACK ENDS

CODE SEGMENT 
START:
MOV AX,DATA 
MOV DS,AX
MOV AX,STACK
MOV SS, AX
CALL ADD_NUMB
CALL SUB_NUMB
CALL MUL_NUMB
CALL DIV_NUMB

ADD_NUMB PROC NEAR
XOR CX,CX
MOV AX,OP1
MOV BX,OP2
ADD AX,BX
JNC LOOP2
INC CX
LOOP2:MOV DI,OFFSET ADDP
MOV [DI],AX
MOV [DI+2],CX
RET
ENDP




SUB_NUMB PROC NEAR
XOR CX,CX
MOV AX,OP1
MOV BX,OP2
SUB AX,BX
JNC LOOP1
INC CX
LOOP1:MOV DI,OFFSET SUBP
MOV [DI],AX
MOV [DI+2]],CX
RET
ENDP



MUL_NUMB PROC NEAR
XOR CX,CX
MOV AX,OP1
MOV BX,OP2
MUL BX

MOV DI,OFFSET MULP
MOV [DI],AX
MOV [DI+2]],DX
RET
ENDP



DIV_NUMB PROC NEAR
MOV AX,OP1
MOV BX,OP2
XOR DX,DX
DIV BX
MOV DI,OFFSET DIVP
MOV [DI],AX






RET
ENDP
CODE ENDS
END START




